using BookEditor_Repository.Interfaces;
using System;
using System.Collections.Generic;
using System.Linq;
using BookEditor_Model.Entities;

namespace BookEditor_Web.Modules
{
    public class SampleData
    {
        private readonly IBookRepository _bookRepository;
        private readonly IAuthorRepository _authorRepository;
        public SampleData(
            IBookRepository bookRepository,
            IAuthorRepository authorRepository)
        {
            _bookRepository = bookRepository;
            _authorRepository = authorRepository;
        }

        public void Seed()
        {
            if (!_bookRepository.GetAll().Any() &&
                !_authorRepository.GetAll().Any())
            {
                var author1 = new Author() { FirstName = "Федор", SecondName = "Достоевский" };
                var book1 = new Book() { Header = "Преступление и наказание", PageCount = 672, PublishingHouseName = "Дом книг", PublishYear = 1866, ISBN = "978-5-170-90630-7", Image = Convert.FromBase64String(img2) };
                var book2 = new Book() { Header = "Идиот", PageCount = 640, PublishingHouseName = "Дом книг", PublishYear = 1868, ISBN = "978-5-389-10472-3", Image = Convert.FromBase64String(img2) };
                book1.BookAuthors = new List<BookAuthor>();
                book1.BookAuthors.Add(new BookAuthor(book1, author1));
                book2.BookAuthors = new List<BookAuthor>();
                book2.BookAuthors.Add(new BookAuthor(book2, author1));
                _authorRepository.Add(author1);
                _bookRepository.Add(book1);
                _bookRepository.Add(book2);


                var author2 = new Author() { FirstName = "Erich", SecondName = "Gamma" };
                var author3 = new Author() { FirstName = "Richard", SecondName = "Helm" };
                var author4 = new Author() { FirstName = "Ralph", SecondName = "Johnson" };
                var author5 = new Author() { FirstName = "John", SecondName = "Vlissides" };
                var book3 = new Book() { Header = "Gang of Four", PageCount = 395, PublishingHouseName = "Addison-Wesley", PublishYear = 1994, ISBN = "0-201-63361-2", Image = Convert.FromBase64String(img1) };
                book3.BookAuthors = new List<BookAuthor>();
                book3.BookAuthors.Add(new BookAuthor(book3, author2));
                book3.BookAuthors.Add(new BookAuthor(book3, author3));
                book3.BookAuthors.Add(new BookAuthor(book3, author4));
                book3.BookAuthors.Add(new BookAuthor(book3, author5));
                _authorRepository.Add(author2);
                _authorRepository.Add(author3);
                _authorRepository.Add(author4);
                _authorRepository.Add(author5);
                _bookRepository.Add(book3);

                var author6 = new Author() { FirstName = "Jeffrey", SecondName = "Richter" };
                var book4 = new Book() { Header = "CLR via C# (4th Edition)", PageCount = 896, PublishingHouseName = "Microsoft Press", PublishYear = 2012, ISBN = "978-0-735-66745-7", Image = Convert.FromBase64String(img1) };
                book4.BookAuthors = new List<BookAuthor>();
                book4.BookAuthors.Add(new BookAuthor(book4, author6));
                _authorRepository.Add(author6);
                _bookRepository.Add(book4);


                _bookRepository.Commit();
            }
        }

        string img1 = "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";
        string img2 = "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";
    }
}
